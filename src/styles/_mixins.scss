@import '_variables';

@mixin btn($subtype, $color, $border-color, $bg-color, $text-alpha: false) {
    .btn-#{$subtype} {
        color: $color;
        border-color: $border-color;
        background-color: $bg-color;

        &:hover {
            color: rgba($color, if($text-alpha == true, $hover-alpha, 1));
            border-color: if($border-color == transparent, $border-color, rgba($border-color, $hover-alpha));
            background-color: if($bg-color == transparent, $bg-color, rgba($bg-color, $hover-alpha));
        }
    }
}

@mixin link($color) {
    color: $color;

    &:hover {
        color: rgba($color, $hover-alpha);
    }
}

@mixin icon($name, $char) {
    .icon.icon-#{name}::before,
    .icon-left.icon-#{name}::before,
    .icon-right.icon-#{name}::after {
        content: $char;
    }
}

@mixin icons($icons) {
    @each $icon, $char in $icons {
        @include icon($icon, $char);
    }
}

// headings
@function getHeadings($from: 1, $to: 6) {
    $hx: '';
    @if $from == 0 {
        $hx: '.h#{$from}';
    } @else {
        $hx: 'h#{$from}, .h#{$from}'
    }

    @if $from == $to {
        @return $hx;
    } @else {
        @return $hx + ',' + getHeadings($from+1, $to);
    }
}

@mixin headings($from: 1, $to: 6) {
    #{getHeadings($from, $to)} {
        @content
    }
}

@mixin heading($size: 1) {
    @include headings($size, $size) {
        @content
    }
}